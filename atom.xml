<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Steve Kallestad]]></title>
  <link href="http://nevetS.github.io/atom.xml" rel="self"/>
  <link href="http://nevetS.github.io/"/>
  <updated>2014-07-05T19:23:29-07:00</updated>
  <id>http://nevetS.github.io/</id>
  <author>
    <name><![CDATA[Steve Kallestad]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NFL Data - Preliminary Modeling]]></title>
    <link href="http://nevetS.github.io/blog/2014/07/05/nfl-data-preliminary-modeling/"/>
    <updated>2014-07-05T18:45:21-07:00</updated>
    <id>http://nevetS.github.io/blog/2014/07/05/nfl-data-preliminary-modeling</id>
    <content type="html"><![CDATA[<p>Before I even start to think about collecting data, I have to figure out where to store it.</p>

<p>On a project like this, I prefer to actually store all of my source data rather than to parse it out on the fly.  I&rsquo;d hate to run a script for 15 hours only to find out later that the data didn&rsquo;t fit my expectations.</p>

<p><img src="http://nevetS.github.io/images/posts/20140705/preliminary-data-diagram.png" alt="Preliminary Data Diagram" /></p>

<!-- more -->


<p>I don&rsquo;t want to spend too much time thinking about details I just don&rsquo;t know yet.  I don&rsquo;t have a purpose for the data, my directive is to collect it.</p>

<p>What I know at this point is that I will want to know the URL, the timestamp for when I grabbed the data, and a status.  I know that I will be grabbing at least two different kinds of pages at this point, so I&rsquo;ve added a category.</p>

<p>Where will I store the data?  The two things that spring immediately to mind are <a href="http://www.mysql.com/">MySQL</a> and <a href="http://www.mongodb.org/">MongoDB</a>.  I have both databases handy.  MySQL will take some time to get moving on, but not much.  Mongo allows you to define the data model as you go.</p>

<p>At this point I know a little bit about these fields:</p>

<ul>
<li><strong>id</strong>: Required, Primary Key, AutoDefined</li>
<li><strong>url</strong>: url&rsquo;s can be long, but the general limit is 2048 characters.</li>
<li><strong>timestamp</strong>: I prefer to keep timestamps in epoch time.  It saves me from having to wonder about leap years, time zones, and daylight savings times between environments when migrating data.  It also saves me from dealing with environment specific idiosyncrasies like the fact that different databases have different formatting and syntax.</li>
<li><strong>status</strong>: Usually I would enumerate status out, but I prefer to move more quickly on this project and not have to worry about defining a fixed set of status values.</li>
<li><strong>category</strong>: I might want a many-to-many relationship of categories if this project were to survive long term, but for now storing the data in-row will work.</li>
<li><strong>body</strong>: The html.  This is long text data.  I can&rsquo;t make any assumptions here other than there will be a lot of text.</li>
</ul>


<p>The above diagram was drawn using <a href="http://yuml.me/diagram/nofunky/class/draw">yUML</a>:</p>

<pre><code>// Preliminary data diagram
[PageData|id:integer;url:string;timestamp:integer;status:string;category:string;body:text]-will eventually become*[note:Games]
[Games]++-1..*&gt;[Plays] 
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sample Project - NFL Data]]></title>
    <link href="http://nevetS.github.io/blog/2014/07/05/sample-project-nfl-data/"/>
    <updated>2014-07-05T17:43:42-07:00</updated>
    <id>http://nevetS.github.io/blog/2014/07/05/sample-project-nfl-data</id>
    <content type="html"><![CDATA[<p>I decided to put together a small project to show a little bit of code and how I might approach a given problem.</p>

<p>For this project, I want to spend minimal time.  The simple directive is: collect a set of play-by-play information on NFL games so that it can be analyzed later.</p>

<!-- more -->


<p>The first question to ask is where can I get that information.  If I head over to NFL.com and click through a few things, I end up at <a href="http://www.nfl.com/gamecenter/2013092906/2013/REG4/steelers@vikings?icampaign=GC_schedule_rr#menu=gameinfo|contentId%3A0ap2000000253076&amp;tab=analyze&amp;analyze=playbyplay">this link</a>.  On that page, I see play by play information:</p>

<p><img src="http://nevetS.github.io/images/posts/20140705/nfl-play-by-play.jpg" alt="Play by Play" /></p>

<p>The URL itself gives me all the information I need to know in order to gather as many games as I want:</p>

<p>Broken down:</p>

<p><img src="http://nevetS.github.io/images/posts/20140705/nfl-url.png" alt="URL Breakdown" /></p>

<p>Unfortunately, I don&rsquo;t know the dates of all the NFL games, I don&rsquo;t know which teams played, and I don&rsquo;t know who was home and who was away.</p>

<p>I&rsquo;m going to have to find another way.  If I go back a few steps in <a href="http://www.nfl.com/schedules/2013/REG4">my navigation</a>, I get to a page that shows links to all of the games from that particular week, with navigation points to other weeks and other years.</p>

<p>That&rsquo;s perfect!  I know right off the bat that I can get all of the links I need.</p>

<p>There are roughly 15 games per week, 17 weeks per year, and play by play data goes back 12 years.  So that means I need to collect data from roughly 3072 pages to get all of the data I need. If I download a page every 10 seconds from the nfl.com servers it will take me about 8 &frac12; hours.  If I do it every 30 seconds, it will take me 25 &frac12; hours.  If I did it every 3 seconds, I could have it all done in 2 &frac12; hours, but that could be problematic in that I would be over-using nfl.com resources.</p>

<p>After a bit of inspection, the data that I&rsquo;m looking for is not contained in the HTML immediately.   When I do the scraping, I&rsquo;m going to have to use a javascript capable utility.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Flash Resumé]]></title>
    <link href="http://nevetS.github.io/blog/2014/07/05/flash-resume/"/>
    <updated>2014-07-05T16:36:25-07:00</updated>
    <id>http://nevetS.github.io/blog/2014/07/05/flash-resume</id>
    <content type="html"><![CDATA[<p>This post includes a flash version of my resumé.  To turn the page, mouse over a corner, click on it and drag it over from one side to the other.</p>

<p>Unfortunately, no pan and zoom controls just yet.  I might work on that time permitting.  Click through to take a look.</p>

<p>Alternatively, look at my <a href="http://nevetS.github.io/assets/personal/steve_kallestad_resume_professional_profile.pdf">PDF Resume</a>.</p>

<!-- more -->




<script language="JavaScript" type="text/javascript">
<!--
//v1.7
// Flash Player Version Detection
// Detect Client Browser type
// Copyright 2005-2008 Adobe Systems Incorporated.  All rights reserved.
var isIE  = (navigator.appVersion.indexOf("MSIE") != -1) ? true : false;
var isWin = (navigator.appVersion.toLowerCase().indexOf("win") != -1) ? true : false;
var isOpera = (navigator.userAgent.indexOf("Opera") != -1) ? true : false;
function ControlVersion()
{
    var version;
    var axo;
    var e;
    // NOTE : new ActiveXObject(strFoo) throws an exception if strFoo isn't in the registry
    try {
        // version will be set for 7.X or greater players
        axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7");
        version = axo.GetVariable("$version");
    } catch (e) {
    }
    if (!version)
    {
        try {
            // version will be set for 6.X players only
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6");
            
            // installed player is some revision of 6.0
            // GetVariable("$version") crashes for versions 6.0.22 through 6.0.29,
            // so we have to be careful. 
            
            // default to the first public version
            version = "WIN 6,0,21,0";
            // throws if AllowScripAccess does not exist (introduced in 6.0r47)     
            axo.AllowScriptAccess = "always";
            // safe to call for 6.0r47 or greater
            version = axo.GetVariable("$version");
        } catch (e) {
        }
    }
    if (!version)
    {
        try {
            // version will be set for 4.X or 5.X player
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3");
            version = axo.GetVariable("$version");
        } catch (e) {
        }
    }
    if (!version)
    {
        try {
            // version will be set for 3.X player
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash.3");
            version = "WIN 3,0,18,0";
        } catch (e) {
        }
    }
    if (!version)
    {
        try {
            // version will be set for 2.X player
            axo = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
            version = "WIN 2,0,0,11";
        } catch (e) {
            version = -1;
        }
    }
    
    return version;
}
// JavaScript helper required to detect Flash Player PlugIn version information
function GetSwfVer(){
    // NS/Opera version >= 3 check for Flash plugin in plugin array
    var flashVer = -1;
    
    if (navigator.plugins != null && navigator.plugins.length > 0) {
        if (navigator.plugins["Shockwave Flash 2.0"] || navigator.plugins["Shockwave Flash"]) {
            var swVer2 = navigator.plugins["Shockwave Flash 2.0"] ? " 2.0" : "";
            var flashDescription = navigator.plugins["Shockwave Flash" + swVer2].description;
            var descArray = flashDescription.split(" ");
            var tempArrayMajor = descArray[2].split(".");           
            var versionMajor = tempArrayMajor[0];
            var versionMinor = tempArrayMajor[1];
            var versionRevision = descArray[3];
            if (versionRevision == "") {
                versionRevision = descArray[4];
            }
            if (versionRevision[0] == "d") {
                versionRevision = versionRevision.substring(1);
            } else if (versionRevision[0] == "r") {
                versionRevision = versionRevision.substring(1);
                if (versionRevision.indexOf("d") > 0) {
                    versionRevision = versionRevision.substring(0, versionRevision.indexOf("d"));
                }
            }
            var flashVer = versionMajor + "." + versionMinor + "." + versionRevision;
        }
    }
    // MSN/WebTV 2.6 supports Flash 4
    else if (navigator.userAgent.toLowerCase().indexOf("webtv/2.6") != -1) flashVer = 4;
    // WebTV 2.5 supports Flash 3
    else if (navigator.userAgent.toLowerCase().indexOf("webtv/2.5") != -1) flashVer = 3;
    // older WebTV supports Flash 2
    else if (navigator.userAgent.toLowerCase().indexOf("webtv") != -1) flashVer = 2;
    else if ( isIE && isWin && !isOpera ) {
        flashVer = ControlVersion();
    }   
    return flashVer;
}
// When called with reqMajorVer, reqMinorVer, reqRevision returns true if that version or greater is available
function DetectFlashVer(reqMajorVer, reqMinorVer, reqRevision)
{
    versionStr = GetSwfVer();
    if (versionStr == -1 ) {
        return false;
    } else if (versionStr != 0) {
        if(isIE && isWin && !isOpera) {
            // Given "WIN 2,0,0,11"
            tempArray         = versionStr.split(" ");  // ["WIN", "2,0,0,11"]
            tempString        = tempArray[1];           // "2,0,0,11"
            versionArray      = tempString.split(",");  // ['2', '0', '0', '11']
        } else {
            versionArray      = versionStr.split(".");
        }
        var versionMajor      = versionArray[0];
        var versionMinor      = versionArray[1];
        var versionRevision   = versionArray[2];
            // is the major.revision >= requested major.revision AND the minor version >= requested minor
        if (versionMajor > parseFloat(reqMajorVer)) {
            return true;
        } else if (versionMajor == parseFloat(reqMajorVer)) {
            if (versionMinor > parseFloat(reqMinorVer))
                return true;
            else if (versionMinor == parseFloat(reqMinorVer)) {
                if (versionRevision >= parseFloat(reqRevision))
                    return true;
            }
        }
        return false;
    }
}
function AC_AddExtension(src, ext)
{
  if (src.indexOf('?') != -1)
    return src.replace(/\?/, ext+'?'); 
  else
    return src + ext;
}
function AC_Generateobj(objAttrs, params, embedAttrs) 
{ 
  var str = '';
  if (isIE && isWin && !isOpera)
  {
    str += '<object ';
    for (var i in objAttrs)
    {
      str += i + '="' + objAttrs[i] + '" ';
    }
    str += '>';
    for (var i in params)
    {
      str += '<param name="' + i + '" value="' + params[i] + '" /> ';
    }
    str += '</object>';
  }
  else
  {
    str += '<embed ';
    for (var i in embedAttrs)
    {
      str += i + '="' + embedAttrs[i] + '" ';
    }
    str += '> </embed>';
  }
  document.write(str);
}
function AC_FL_RunContent(){
  var ret = 
    AC_GetArgs
    (  arguments, ".swf", "movie", "clsid:d27cdb6e-ae6d-11cf-96b8-444553540000"
     , "application/x-shockwave-flash"
    );
  AC_Generateobj(ret.objAttrs, ret.params, ret.embedAttrs);
}
function AC_SW_RunContent(){
  var ret = 
    AC_GetArgs
    (  arguments, ".dcr", "src", "clsid:166B1BCA-3F9C-11CF-8075-444553540000"
     , null
    );
  AC_Generateobj(ret.objAttrs, ret.params, ret.embedAttrs);
}
function AC_GetArgs(args, ext, srcParamName, classid, mimeType){
  var ret = new Object();
  ret.embedAttrs = new Object();
  ret.params = new Object();
  ret.objAttrs = new Object();
  for (var i=0; i < args.length; i=i+2){
    var currArg = args[i].toLowerCase();    
    switch (currArg){   
      case "classid":
        break;
      case "pluginspage":
        ret.embedAttrs[args[i]] = args[i+1];
        break;
      case "src":
      case "movie": 
        args[i+1] = AC_AddExtension(args[i+1], ext);
        ret.embedAttrs["src"] = args[i+1];
        ret.params[srcParamName] = args[i+1];
        break;
      case "onafterupdate":
      case "onbeforeupdate":
      case "onblur":
      case "oncellchange":
      case "onclick":
      case "ondblclick":
      case "ondrag":
      case "ondragend":
      case "ondragenter":
      case "ondragleave":
      case "ondragover":
      case "ondrop":
      case "onfinish":
      case "onfocus":
      case "onhelp":
      case "onmousedown":
      case "onmouseup":
      case "onmouseover":
      case "onmousemove":
      case "onmouseout":
      case "onkeypress":
      case "onkeydown":
      case "onkeyup":
      case "onload":
      case "onlosecapture":
      case "onpropertychange":
      case "onreadystatechange":
      case "onrowsdelete":
      case "onrowenter":
      case "onrowexit":
      case "onrowsinserted":
      case "onstart":
      case "onscroll":
      case "onbeforeeditfocus":
      case "onactivate":
      case "onbeforedeactivate":
      case "ondeactivate":
      case "type":
      case "codebase":
      case "id":
        ret.objAttrs[args[i]] = args[i+1];
        break;
      case "width":
      case "height":
      case "align":
      case "vspace": 
      case "hspace":
      case "class":
      case "title":
      case "accesskey":
      case "name":
      case "tabindex":
        ret.embedAttrs[args[i]] = ret.objAttrs[args[i]] = args[i+1];
        break;
      default:
        ret.embedAttrs[args[i]] = ret.params[args[i]] = args[i+1];
    }
  }
  ret.objAttrs["classid"] = classid;
  if (mimeType) ret.embedAttrs["type"] = mimeType;
  return ret;
}
// -->
</script>


<script language="JavaScript" type="text/javascript">
// Globals
// Major version of Flash required
var requiredMajorVersion = 10;
// Minor version of Flash required
var requiredMinorVersion = 0;
// Revision of Flash required
var requiredRevision = 2;
</script>


<script language="JavaScript" type="text/javascript">
<!--
var hasRightVersion = DetectFlashVer(requiredMajorVersion, requiredMinorVersion, requiredRevision);
if(hasRightVersion) {  // if we've detected an acceptable version
    // embed the flash movie
    AC_FL_RunContent(
        'codebase', 'http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=10,0,2,0',
        'width', '738',
        'height', '918',
        'src', '/assets/personal/steve_kallestad_resume_professional_profile',
        'quality', 'high',
        'pluginspage', 'http://www.adobe.com/go/getflashplayer',
        'align', 'middle',
        'play', 'false',
        'loop', 'false',
        'scale', 'noscale',
        'wmode', 'window',
        'devicefont', 'false',
        'id', 'steve_kallestad_resume_professional_profile',
        'bgcolor', '#999999',
        'name', 'steve_kallestad_resume_professional_profile',
        'menu', 'true',
        'allowFullScreen', 'true',
        'allowScriptAccess','sameDomain',
        'movie', '/assets/personal/steve_kallestad_resume_professional_profile',
        'salign', ''
        ); //end AC code
} else {  // flash is too old or we can't detect the plugin
    var alternateContent = '<p>This content requires version '
        + requiredMajorVersion + '.' + requiredMinorVersion + '.' + requiredRevision + ' '
        + 'or higher of the Adobe Flash Player.</p>'
        + '<a href="http://www.adobe.com/go/getflashplayer/">Get Flash</a>';
    document.write(alternateContent);  // insert non-flash content
}
// -->
</script>


<p><noscript></p>

<pre><code>This content requires the Adobe Flash Player.
&lt;a href="http://www.adobe.com/go/getflashplayer/"&gt;Get Flash&lt;/a&gt;
</code></pre>

<p></noscript></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started]]></title>
    <link href="http://nevetS.github.io/blog/2014/07/05/getting-started/"/>
    <updated>2014-07-05T14:56:10-07:00</updated>
    <id>http://nevetS.github.io/blog/2014/07/05/getting-started</id>
    <content type="html"><![CDATA[<h3>Repository Cleanup</h3>

<p>A few people have asked to see my github repository recently.  Since most of the software I&rsquo;m involved with these days is closed source there&rsquo;s not much here.  Let&rsquo;s see if I can&rsquo;t change that today.  It&rsquo;s 2:29 PM.  First step &ndash; put up a github site.</p>

<p>Follow the jump to see the steps and how long it took to put together.</p>

<!-- more -->


<p>I figure the way to get started is by leveraging <a href="http://jekyllrb.com/">Jekyl</a> and <a href="http://octopress.org/">Octopress</a>.  It&rsquo;s been a LONG time since I&rsquo;ve done any ruby development and I&rsquo;m not familiar with either of these two applications/frameworks/or whatever you would call them.  I do know they work well with github static sites and I&rsquo;m hoping that they will get me up and running quickly without spending any time worrying about design right out of the gate.</p>

<p>Sure enough, no ruby installed on my desired server.</p>

<pre><code>sudo apt-get install ruby
</code></pre>

<p>Wrong version.</p>

<pre><code>sudo apt-get remove ruby
sudo apt-get install ruby2.1.2
</code></pre>

<p>Nothing</p>

<pre><code>curl -L https://get.rvm.io | bash -s stable
The program 'curl' is currently not installed
</code></pre>

<p>Oh boy.</p>

<pre><code>sudo apt-get install curl
curl -L https://get.rvm.io | bash -s stable
source ~/.rvm/scripts/rvm
rvm requirements
rvm install ruby
</code></pre>

<p>OK, that wasn&rsquo;t all that hard.  It has been a while, so I&rsquo;m pretty slow.  It&rsquo;s now 2:39.  On to installing Jekyll and Octopus.  Jekyll first:</p>

<pre><code>gem install jekyll
gem install bundler
</code></pre>

<p>OK, now on to octopress:</p>

<pre><code>git clone git://github.com/imathis/octopress.git githubsite
cd githubsite/
bundle install
rake install
</code></pre>

<p>Looks like I&rsquo;m almost there.  Now I just have to edit the config file&hellip; done.  2:57.</p>

<p>Start my first post with:</p>

<pre><code>rake new_post["Getting Started"]
</code></pre>

<p>That generates a markdown document with a little bit of what looks to be yaml at the top:</p>

<pre><code>---
layout: post
title: "Getting Started"
date: 2014-07-05 14:56:10 -0700
comments: true
categories: 
---   
</code></pre>

<p>Yikes.  Looks like one of my systems has the wrong time.  Looking into it.  NTP synced and we&rsquo;re all good.</p>

<p>Saving post.</p>

<pre><code>rake preview
</code></pre>

<p>OK, so that didn&rsquo;t go so well.  Turns out I need a way to run javascript from within Ruby.  Might as well install node.js.  It&rsquo;s now 3:18.  This is taking much longer than anticipated.</p>

<pre><code>sudo apt-get install python g++ make checkinstall fakeroot
src=$(mktemp -d) &amp;&amp; cd $src
wget -N http://nodejs.org/dist/node-latest.tar.gz
tar xzvf node-latest.tar.gz &amp;&amp; cd node-v*
./configure
sudo fakeroot checkinstall -y --install=no --pkgversion $(echo $(pwd) | sed -n -re's/.+node-v(.+)$/\1/p') make -j$(($(nproc)+1)) install
sudo dpkg -i node_*
</code></pre>

<p>Removal of node after installing like this, by the way, is sudo dpkg -r node</p>

<pre><code>sudo dpkg -i node_0.10.29-1_amd64.deb
</code></pre>

<p>OK, so now we&rsquo;re back in business.  3:26 PM</p>

<pre><code>cd /back/to/site/directory
rake generate
rake preview
</code></pre>

<p>and point my web browser to <a href="http://linuxserver:4000/">http://linuxserver:4000/</a></p>

<p>Of course, before I had to do that, I had to open up a hole in the firewall:</p>

<pre><code>sudo ufw allow 4000
sudo ufw reload
</code></pre>

<p>OK.  So it&rsquo;s 3:28 and this is ready to send to github.  This server isn&rsquo;t set up for key authentication to github just yet, so that will take a few minutes.</p>

<p>I found my github ssh key, copied it into ~/.ssh/github_private_key</p>

<pre><code>eval `ssh-agent -s`
ssh-add ~/.ssh/github_private_key
ssh git@github.com

The authenticity of host 'github.com (192.30.252.130)' can't be established.
RSA key fingerprint is 16:27:ac:a5:12:28:2d:36:56:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,192.30.334.130' (RSA) to the list of known hosts.
Hi nevetS! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre>

<p>It&rsquo;s now 3:35.  Now to figure out how to add my site repo to github.</p>

<ol>
<li>Create a new repo on github named yourusername.github.io</li>
<li>have ruby do all the heavy lifting</li>
</ol>


<hr />

<pre><code>rake setup_github_pages[git@github.com:username/username.github.io.git]

rake deploy.
</code></pre>

<p>Let&rsquo;s see how that worked out.  It&rsquo;s now 3:49.</p>

<p>Looks like the commit got there.  10 minutes or so before I will know if it&rsquo;s configured properly.  I do see an index.html in the root directory of the master repo, so I&rsquo;m pretty confident this is going to work.</p>
]]></content>
  </entry>
  
</feed>
