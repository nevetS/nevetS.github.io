<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Java | Steve Kallestad]]></title>
  <link href="http://nevetS.github.io/blog/categories/java/atom.xml" rel="self"/>
  <link href="http://nevetS.github.io/"/>
  <updated>2014-07-07T17:42:44-07:00</updated>
  <id>http://nevetS.github.io/</id>
  <author>
    <name><![CDATA[Steve Kallestad]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[NFL Data - Let's Start Scraping]]></title>
    <link href="http://nevetS.github.io/blog/2014/07/05/nfl-data-lets-start-scraping/"/>
    <updated>2014-07-05T20:22:01-07:00</updated>
    <id>http://nevetS.github.io/blog/2014/07/05/nfl-data-lets-start-scraping</id>
    <content type="html"><![CDATA[<p>We have two categories of pages to get &ndash; The weekly summaries which show some summary data of games played during each week, and the actual game pages.</p>

<p>The weekly summaries can all be grabbed with easily predictable URLs so that will be the starting point.</p>

<!-- more -->


<p>The URLs for these pages are <a href="http://www.nfl.com/schedules/2001/REG1">http://www.nfl.com/schedules/2001/REG1</a> through <a href="http://www.nfl.com/schedules/2013/REG17.">http://www.nfl.com/schedules/2013/REG17.</a></p>

<p>The important parts are the last two segments of the URL.  We want to iterate from 2001-2013.  For each of those years, we want to iterate from 1-17.</p>

<p>There are some problems that we can run into.  The nfl.com site could go down.  It could insert ads unexpectedly into our pages.  My internet service could go down at any time.  This is a rapid project, so while I&rsquo;m not going to ignore the potential for problems, I am also not going to over-think them.  If a problem occurs I will troubleshoot my way through it.</p>

<p>I know I&rsquo;m going to need a javascript capable scraping utility.  I&rsquo;m going to go with Selenium.  Selenium is a library used mainly for unit testing web applications.  I&rsquo;ll simply point it to each URL, grab our data, and put it in a data store.  We&rsquo;ll post-process that data later to get the next category of pages.</p>
]]></content>
  </entry>
  
</feed>
